// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	dto "lifelogger/server/domain/users/dto"

	mock "github.com/stretchr/testify/mock"
)

// CreateUserService is an autogenerated mock type for the CreateUserService type
type CreateUserService struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: _a0
func (_m *CreateUserService) CreateUser(_a0 dto.CreateUserReqDto) dto.UserDto {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 dto.UserDto
	if rf, ok := ret.Get(0).(func(dto.CreateUserReqDto) dto.UserDto); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(dto.UserDto)
	}

	return r0
}

// NewCreateUserService creates a new instance of CreateUserService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateUserService(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateUserService {
	mock := &CreateUserService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
