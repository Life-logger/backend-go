// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	dto "lifelogger/server/domain/hello/dto"

	mock "github.com/stretchr/testify/mock"
)

// GetHelloService is an autogenerated mock type for the GetHelloService type
type GetHelloService struct {
	mock.Mock
}

// GetHello provides a mock function with given fields: _a0
func (_m *GetHelloService) GetHello(_a0 dto.GetHelloReqDto) string {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetHello")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(dto.GetHelloReqDto) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewGetHelloService creates a new instance of GetHelloService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetHelloService(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetHelloService {
	mock := &GetHelloService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
